1、绑定数据：<div>{{test}}</div>

2、绑定事件：bindtap="eventName"

3、改变data里面的内容：this.setData({test:'val'});

4、条件标签：
            <view wx:if="{{val}}"></view>
            <view wx:else="{{val}}"></view>

5、取data里面的值：
        this.data.val

6、循环数据：
<view wx:for="{{list}}" wx:for-item="newItem" wx:for-index="newIndex">
    {{index}}-{{item}}
</view>

7、加载模板：
<include src="相对路径" />

在要加载的模板里面定义模板
<template name="test1">内容{{test}}</template>
<template name="test2">内容</template>

引入：
<import src="相对路径">
<template is="test1" />

设置数据:
<template is="test1" data="{{test:"内容"}}"/>

8、点击事件：catchtap绑定的事件不会冒泡，bindtap绑定的事件会冒泡
<view bindtap="click" data-id="title"></view>
click:function(event){
    event里面有很多属性
        currentTarget表示绑定事件的元素
        currentTarget里面有个属性dataset里面包含元素里面的属性data-id
        target触发事件的源
}

9、在子页面的js里面可以通过 var app=getApp();得到app里面的属性

10、跳转页面的方法：在js里面
跳转后当前页面隐藏
wx.navigateTo({
    url:'../logs/logs'
});

<navigator url="../logs/logs?id=1" redirect></navigator>和a标签的用法一样


跳转后当前页面销毁
wx.redirectTo({
    url:'../logs/logs'
});

// 跳转到tabBar页面（在app.json中注册过的tabBar页面），同时关闭其他非tabBar页面。
wx.switchTab({
  url: 'page/index/index'
})

11、传递参数：
wx.navigateTo({
    url:'../logs/logs?id=1'
});

取值在onload:function(options){
    options里面有我们要的数据
}

12、取input的值
    <input bindinput="username">

    username:function(event){
        event.detail.value
    }


